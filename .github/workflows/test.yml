name: Main Test Job

on:
  workflow_call:
    inputs:
      mock-maker:
        required: true
        type: string
      member-accessor:
        required: true
        type: string

jobs:
  test:
    needs: build
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"

    # Definition of the test matrix
    strategy:
      matrix:
        java: [ 11, 17 ]
        entry:
          - { mock-maker: 'mock-maker-default', member-accessor: 'member-accessor-default' }
          - { mock-maker: 'mock-maker-inline', member-accessor: 'member-accessor-module' }
          - { mock-maker: 'mock-maker-subclass', member-accessor: 'member-accessor-module' }
          - { mock-maker: 'mock-maker-subclass', member-accessor: 'member-accessor-reflection' }
          - { mock-maker: 'mock-maker-inline', member-accessor: 'member-accessor-reflection' }

    # All test steps
    steps:
      - name: 1. Checkout out test code
        uses: actions/checkout@v3

      - name: 2. Download build artifacts with name ${{ matrix.entry.mock-maker }}-${{ matrix.entry.member-accessor }}-build-artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.entry.mock-maker }}-${{ matrix.entry.member-accessor }}-build-artifacts

      - name: 3. Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}

      - name: 4. Test on Java ${{ matrix.java }} with ${{ matrix.entry.mock-maker }} and ${{ matrix.entry.member-accessor }}
        run: |
          ./gradlew test -x testClasses \
          -x compileTestJava -x compileTestGroovy -x compileTestKotlin -x compileTestBundleJava \
          -x processTestResources \
          -x classes -x compileJava -x compileGroovy -x compileKotlin -x compileOtherBundleJava \
          -x processResources -x processOtherBundleResources \
          -x preBuild -x preDebugBuild \
          -x jar

      #          ./gradlew test -x classes -x testClasses \
      #          -x compileJava -x compileTestJava \
      #          -x compileGroovy -x compileTestGroovy \
      #          -x compileKotlin -x compileTestKotlin \
      #          -x compileOtherBundleJava -x compileTestBundleJava -x processOtherBundleResources \
      #          -x preBuild -x preDebugBuild \
      #          -x jar

      - name: 5. Upload coverage report
        run: |
          ./gradlew coverageReport -s --scan && cp build/reports/jacoco/mockitoCoverage/mockitoCoverage.xml jacoco.xml
          curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step

          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig

          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM

          chmod +x codecov
          ./codecov
